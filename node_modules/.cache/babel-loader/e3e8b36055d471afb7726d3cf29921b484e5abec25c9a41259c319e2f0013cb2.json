{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst API_KEY = \"YOUR_TMDB_API_KEY\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nexport const fetchMovies = createAsyncThunk(\"movies/fetchMovies\", async (query, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query\n      }\n    });\n    return response.data.results;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState: {\n    movies: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchMovies.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchMovies.fulfilled, (state, action) => {\n      state.loading = false;\n      state.movies = action.payload;\n    }).addCase(fetchMovies.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default moviesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_KEY","BASE_URL","fetchMovies","query","rejectWithValue","response","get","params","api_key","data","results","error","moviesSlice","name","initialState","movies","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/vimalkumawat/Desktop/movie-search-app/src/slices/moviesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_KEY = \"YOUR_TMDB_API_KEY\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\nexport const fetchMovies = createAsyncThunk(\n  \"movies/fetchMovies\",\n  async (query, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/search/movie`, {\n        params: { api_key: API_KEY, query },\n      });\n      return response.data.results;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState: {\n    movies: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMovies.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchMovies.fulfilled, (state, action) => {\n        state.loading = false;\n        state.movies = action.payload;\n      })\n      .addCase(fetchMovies.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport default moviesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,mBAAmB;AACnC,MAAMC,QAAQ,GAAG,8BAA8B;AAE/C,OAAO,MAAMC,WAAW,GAAGJ,gBAAgB,CACzC,oBAAoB,EACpB,OAAOK,KAAK,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGL,QAAQ,eAAe,EAAE;MAC3DM,MAAM,EAAE;QAAEC,OAAO,EAAER,OAAO;QAAEG;MAAM;IACpC,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACI,IAAI,CAACC,OAAO;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOP,eAAe,CAACO,KAAK,CAACN,QAAQ,CAACI,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AAED,MAAMG,WAAW,GAAGf,WAAW,CAAC;EAC9BgB,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,KAAK;IACdL,KAAK,EAAE;EACT,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,WAAW,CAACmB,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDS,OAAO,CAAClB,WAAW,CAACqB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,MAAM,GAAGS,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAAClB,WAAW,CAACwB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeb,WAAW,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}