{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API_URL } from \"../assets/constants\";\n\n// Fetch reviews based on movie ID\nexport const fetchMovieReviews = createAsyncThunk(\"reviews/fetchMovieReviews\", async movieId => {\n  const url = `${API_URL}/movie/${movieId}/reviews?language=en-US&page=1`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZmRhNWNlMmU5NjQ4YTY3ZGJmZDM3YzBkYTQ2MDY3YSIsIm5iZiI6MTczMjc3NzkyMi43MTc5NDE1LCJzdWIiOiI2NzQ4MTYwNDFkMGI1YjNmYjgzM2YyMTYiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.rOIeLQi9K6HjHcEVAsbWBxvj9DdNz-y2DvUXpssEjGs\"\n    }\n  };\n  try {\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch reviews\");\n    }\n    const data = await response.json();\n    return data.results; // Return the reviews data\n  } catch (error) {\n    return {\n      error: error.message\n    };\n  }\n});\nconst reviewsSlice = createSlice({\n  name: \"reviews\",\n  initialState: {\n    reviews: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchMovieReviews.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchMovieReviews.fulfilled, (state, action) => {\n      state.loading = false;\n      state.reviews = action.payload; // Save reviews in state\n    }).addCase(fetchMovieReviews.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload; // Set error if the request fails\n    });\n  }\n});\nexport default reviewsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API_URL","fetchMovieReviews","movieId","url","options","method","headers","accept","Authorization","response","fetch","ok","Error","data","json","results","error","message","reviewsSlice","name","initialState","reviews","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/vimalkumawat/Desktop/movie-search-app/src/reducer/reviewsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API_URL } from \"../assets/constants\";\n\n// Fetch reviews based on movie ID\nexport const fetchMovieReviews = createAsyncThunk(\n  \"reviews/fetchMovieReviews\",\n  async (movieId) => {\n    const url = `${API_URL}/movie/${movieId}/reviews?language=en-US&page=1`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization:\n          \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZmRhNWNlMmU5NjQ4YTY3ZGJmZDM3YzBkYTQ2MDY3YSIsIm5iZiI6MTczMjc3NzkyMi43MTc5NDE1LCJzdWIiOiI2NzQ4MTYwNDFkMGI1YjNmYjgzM2YyMTYiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.rOIeLQi9K6HjHcEVAsbWBxvj9DdNz-y2DvUXpssEjGs\",\n      },\n    };\n\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch reviews\");\n      }\n      const data = await response.json();\n      return data.results; // Return the reviews data\n    } catch (error) {\n      return { error: error.message };\n    }\n  }\n);\n\nconst reviewsSlice = createSlice({\n  name: \"reviews\",\n  initialState: {\n    reviews: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMovieReviews.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchMovieReviews.fulfilled, (state, action) => {\n        state.loading = false;\n        state.reviews = action.payload; // Save reviews in state\n      })\n      .addCase(fetchMovieReviews.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload; // Set error if the request fails\n      });\n  },\n});\n\nexport default reviewsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,OAAO,QAAQ,qBAAqB;;AAE7C;AACA,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAC/C,2BAA2B,EAC3B,MAAOG,OAAO,IAAK;EACjB,MAAMC,GAAG,GAAG,GAAGH,OAAO,UAAUE,OAAO,gCAAgC;EACvE,MAAME,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EACX;IACJ;EACF,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAEC,OAAO,CAAC;IAC1C,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEA,KAAK,EAAEA,KAAK,CAACC;IAAQ,CAAC;EACjC;AACF,CACF,CAAC;AAED,MAAMC,YAAY,GAAGpB,WAAW,CAAC;EAC/BqB,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,KAAK;IACdN,KAAK,EAAE;EACT,CAAC;EACDO,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACzB,iBAAiB,CAAC0B,OAAO,EAAGC,KAAK,IAAK;MAC7CA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDU,OAAO,CAACzB,iBAAiB,CAAC4B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,OAAO,GAAGS,MAAM,CAACC,OAAO,CAAC,CAAC;IAClC,CAAC,CAAC,CACDL,OAAO,CAACzB,iBAAiB,CAAC+B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACC,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeb,YAAY,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}