{"ast":null,"code":"var _jsxFileName = \"/Users/vimalkumawat/Desktop/movie-search-app/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Box, TextField, Button } from \"@mui/material\";\nimport { fetchMovies } from \"../reducer/moviesSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  // State to store the current search query\n  const [query, setQuery] = useState(\"\");\n\n  // State to track if the search query is changed from the previous query\n  const [previousQuery, setPreviousQuery] = useState(\"\");\n\n  // Dispatch function to interact with Redux actions\n  const dispatch = useDispatch();\n\n  // Function to handle the search action\n  const handleSearch = () => {\n    if (query.trim()) {\n      // Dispatch action to fetch movies based on the search query\n      dispatch(fetchMovies(query));\n      // Set the current query as the previous query after search\n      setPreviousQuery(query);\n    }\n  };\n\n  // // UseEffect hook to track changes in the query input\n  // useEffect(() => {\n  //   // When query changes, check if it is different from the previous query\n  //   // If yes, enable the search button\n  // }, [query]);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: 2,\n      margin: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      label: \"Search Movies\",\n      value: query,\n      onChange: e => setQuery(e.target.value) // Update the query when the user types\n      ,\n      fullWidth: true,\n      sx: {\n        maxWidth: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSearch,\n      disabled: query.trim() === \"\" || query === previousQuery // Disable if the query is empty or same as previous query\n      ,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"KygbcakP0VlxTSQrUGrTo8DMk78=\", false, function () {\n  return [useDispatch];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","Box","TextField","Button","fetchMovies","jsxDEV","_jsxDEV","SearchBar","_s","query","setQuery","previousQuery","setPreviousQuery","dispatch","handleSearch","trim","sx","display","justifyContent","alignItems","gap","margin","children","variant","label","value","onChange","e","target","fullWidth","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/vimalkumawat/Desktop/movie-search-app/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Box, TextField, Button } from \"@mui/material\";\nimport { fetchMovies } from \"../reducer/moviesSlice\";\n\nconst SearchBar = () => {\n  // State to store the current search query\n  const [query, setQuery] = useState(\"\");\n\n  // State to track if the search query is changed from the previous query\n  const [previousQuery, setPreviousQuery] = useState(\"\");\n\n  // Dispatch function to interact with Redux actions\n  const dispatch = useDispatch();\n\n  // Function to handle the search action\n  const handleSearch = () => {\n    if (query.trim()) {\n      // Dispatch action to fetch movies based on the search query\n      dispatch(fetchMovies(query));\n      // Set the current query as the previous query after search\n      setPreviousQuery(query);\n    }\n  };\n\n  // // UseEffect hook to track changes in the query input\n  // useEffect(() => {\n  //   // When query changes, check if it is different from the previous query\n  //   // If yes, enable the search button\n  // }, [query]);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gap: 2,\n        margin: 3,\n      }}\n    >\n      <TextField\n        variant=\"outlined\"\n        label=\"Search Movies\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)} // Update the query when the user types\n        fullWidth\n        sx={{ maxWidth: 400 }}\n      />\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleSearch}\n        disabled={query.trim() === \"\" || query === previousQuery} // Disable if the query is empty or same as previous query\n      >\n        Search\n      </Button>\n    </Box>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACtD,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIL,KAAK,CAACM,IAAI,CAAC,CAAC,EAAE;MAChB;MACAF,QAAQ,CAACT,WAAW,CAACK,KAAK,CAAC,CAAC;MAC5B;MACAG,gBAAgB,CAACH,KAAK,CAAC;IACzB;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA,oBACEH,OAAA,CAACL,GAAG;IACFe,EAAE,EAAE;MACFC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,GAAG,EAAE,CAAC;MACNC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,gBAEFhB,OAAA,CAACJ,SAAS;MACRqB,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,eAAe;MACrBC,KAAK,EAAEhB,KAAM;MACbiB,QAAQ,EAAGC,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;MAAA;MAC3CI,SAAS;MACTb,EAAE,EAAE;QAAEc,QAAQ,EAAE;MAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eAEF5B,OAAA,CAACH,MAAM;MACLoB,OAAO,EAAC,WAAW;MACnBY,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEtB,YAAa;MACtBuB,QAAQ,EAAE5B,KAAK,CAACM,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIN,KAAK,KAAKE,aAAc,CAAC;MAAA;MAAAW,QAAA,EAC3D;IAED;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvDID,SAAS;EAAA,QAQIP,WAAW;AAAA;AAAAsC,EAAA,GARxB/B,SAAS;AAyDf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}