{"ast":null,"code":"var _jsxFileName = \"/Users/vimalkumawat/Desktop/movie-search-app/src/components/MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchMovieDetails } from \"../redux/movieDetailsSlice\";\nimport { Card, CardMedia, CardContent, Typography, Button, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetailsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get movie ID from URL\n  const dispatch = useDispatch();\n\n  // Get movie details from Redux state\n  const {\n    movie,\n    loading,\n    error\n  } = useSelector(state => state.movieDetails);\n  useEffect(() => {\n    dispatch(fetchMovieDetails(id)); // Fetch movie details when component mounts\n  }, [id, dispatch]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Movie not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      component: Link,\n      to: \"/\",\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        marginBottom: 2\n      },\n      children: \"Back to Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        display: \"flex\",\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        sx: {\n          width: 300,\n          objectFit: \"cover\"\n        },\n        image: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"div\",\n          gutterBottom: true,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Overview:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \" \", movie.overview || \"No description available.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), \" \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), \" \", movie.vote_average, \" / 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genres:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), \" \", movie.genres.map(genre => genre.name).join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetailsPage, \"zjFc5MtrvuzRq+voSmHd+acqm4A=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = MovieDetailsPage;\nexport default MovieDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailsPage\");","map":{"version":3,"names":["React","useEffect","useParams","Link","useDispatch","useSelector","fetchMovieDetails","Card","CardMedia","CardContent","Typography","Button","Box","jsxDEV","_jsxDEV","MovieDetailsPage","_s","id","dispatch","movie","loading","error","state","movieDetails","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","padding","component","to","variant","color","marginBottom","display","boxShadow","width","objectFit","image","poster_path","alt","title","gutterBottom","paragraph","overview","release_date","vote_average","genres","map","genre","name","join","_c","$RefreshReg$"],"sources":["/Users/vimalkumawat/Desktop/movie-search-app/src/components/MovieDetails.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchMovieDetails } from \"../redux/movieDetailsSlice\";\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  Button,\n  Box,\n} from \"@mui/material\";\n\nconst MovieDetailsPage = () => {\n  const { id } = useParams(); // Get movie ID from URL\n  const dispatch = useDispatch();\n\n  // Get movie details from Redux state\n  const { movie, loading, error } = useSelector((state) => state.movieDetails);\n\n  useEffect(() => {\n    dispatch(fetchMovieDetails(id)); // Fetch movie details when component mounts\n  }, [id, dispatch]);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n  if (!movie) return <div>Movie not found</div>;\n\n  return (\n    <Box sx={{ padding: 3 }}>\n      <Button\n        component={Link}\n        to=\"/\"\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{ marginBottom: 2 }}\n      >\n        Back to Search\n      </Button>\n\n      <Card sx={{ display: \"flex\", boxShadow: 3 }}>\n        <CardMedia\n          component=\"img\"\n          sx={{ width: 300, objectFit: \"cover\" }}\n          image={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <CardContent>\n          <Typography variant=\"h4\" component=\"div\" gutterBottom>\n            {movie.title}\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n            <strong>Overview:</strong>{\" \"}\n            {movie.overview || \"No description available.\"}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            <strong>Release Date:</strong> {movie.release_date}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            <strong>Rating:</strong> {movie.vote_average} / 10\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            <strong>Genres:</strong>{\" \"}\n            {movie.genres.map((genre) => genre.name).join(\", \")}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}